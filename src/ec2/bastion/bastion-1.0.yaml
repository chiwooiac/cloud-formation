---
AWSTemplateFormatVersion: '2010-09-09'
Description: Bastion Host by Levon Becker v20161012-2100
Parameters:
  Owner:
    Description: Enter Team or Individual Name Responsible for the Stack.
    Type: String
    Default: FirstName LastName
  Project:
    Description: Enter Project Name.
    Type: String
    Default: Bastion Creation
  VPC:
    Description: Select VPC.
    Type: AWS::EC2::VPC::Id
  PublicSubnet:
    Description: Public Subnet to Deploy Bastion Host in.
    Type: AWS::EC2::Subnet::Id
#  PublicNetworkAcl:
#    Description: Enter Public Network ACL ID.
#    Type: String
#    Default: acl-0000000
#  InternalAccessSecurityGroup:
#    Description: Security Group That Allows Bastion Host Access to Instances.
#    Type: AWS::EC2::SecurityGroup::Id
  OsType:
    Description: Select OS Type for Bastion Host.
    Type: String
    Default: amazon
    AllowedValues:
      - amazon
      - ubuntu
  NetworkAccessIP:
    Description: Source that has SSH access to the bastion host. (i.e. 50.32.108.38/32)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
#  AllowSshRdpToBastionRuleNumber:
#    Description: Enter Public Network ACL Rule Number to Allow SSH/RDP Access to EIP
#      from Network Access IP.
#    Type: Number
#    Default: '200'
#  AllowIcmpToBastionRuleNumber:
#    Description: Enter Public Network ACL Rule Number to Allow SSH/RDP Access to EIP
#      from Network Access IP.
#    Type: Number
#    Default: '205'
  PackageList:
    Description: Enter Packages to install (Space Separated)
    Type: String
    Default: curl wget ca-certificates openssl vim git awscli yum-utils nfs-utils
  Ec2KeyPair:
    Description: Select Keypair to Assign to EC2 Instances
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: Select Instance Type.
    Type: String
    Default: t4g.micro
    AllowedValues:
      - t4g.nano
      - t4g.micro
      - t4g.small
      - t4g.medium
      - t4g.large
    ConstraintDescription: Must be a valid EC2 instance type.
Mappings:
  RegionMap:
    ap-northeast-2:
      AMIAmazon: ami-010d61e89c3af784f # amazon/amzn2-ami-hvm
      AMIUbuntu: ami-d732f0b7
    us-west-2:
      AMIAmazon: ami-b04e92d0
      AMIUbuntu: ami-d732f0b7
    us-east-1:
      AMIAmazon: ami-c481fad3
      AMIUbuntu: ami-2d39803a
  bootstrap:
    rhel:
      warmebs: 'echo ''ACTION: Performing EBS Warming'' && dd if=/dev/xvda of=/dev/xvda
        conv=notrunc bs=1M status=progress'
      yumupdate: yum update -y
      installpackagelist: 'yum install -y '
    ubuntu:
      warmebs: 'echo ''ACTION: Performing EBS Warming'' && dd if=/dev/xvda of=/dev/xvda
        conv=notrunc bs=1M status=progress'
      installpackagelist: 'apt-get update && apt-get install '
Conditions:
  AmazonHost:
    Fn::Equals:
      - Ref: OsType
      - amazon
  UbuntuHost:
    Fn::Equals:
      - Ref: OsType
      - ubuntu
  LinuxHost:
    Fn::Or:
      - Fn::Equals:
          - Ref: OsType
          - amazon
      - Fn::Equals:
          - Ref: OsType
          - ubuntu
  RhelFamily:
    Fn::Or:
      - Fn::Equals:
          - Ref: OsType
          - amazon
      - Fn::Equals:
          - Ref: OsType
          - centos
      - Fn::Equals:
          - Ref: OsType
          - rhel
  WindowsHost:
    Fn::Equals:
      - Ref: OsType
      - windows
Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: "/"
  IamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-instance-policy"
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - ec2:Describe*
              - elasticloadbalancing:Describe*
              - autoscaling:Describe*
            Resource: "*"
      Roles:
        - Ref: IamRole
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: IamRole
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Access to Bastion Instance
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - Ref: AWS::StackName
                - "-bastion-access"
        - Key: Owner
          Value:
            Ref: Owner
        - Key: Project
          Value:
            Ref: Project
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:
            Fn::If:
              - LinuxHost
              - '22'
              - '3389'
          ToPort:
            Fn::If:
              - LinuxHost
              - '22'
              - '3389'
          CidrIp:
            Ref: NetworkAccessIP
        - IpProtocol: icmp
          FromPort: "-1"
          ToPort: "-1"
          CidrIp:
            Ref: NetworkAccessIP
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - BastionSecurityGroup
      - IamInstanceProfile
    Properties:
      IamInstanceProfile:
        Ref: IamInstanceProfile
      ImageId:
        Fn::If:
          - AmazonHost
          - Fn::FindInMap:
              - RegionMap
              - Ref: AWS::Region
              - AMIAmazon
          - Fn::If:
              - UbuntuHost
              - Fn::FindInMap:
                  - RegionMap
                  - Ref: AWS::Region
                  - AMIUbuntu
              - unknown
      InstanceInitiatedShutdownBehavior: stop
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: Ec2KeyPair
      Monitoring: 'true'
      SecurityGroupIds:
        - Ref: BastionSecurityGroup
#        - Ref: InternalAccessSecurityGroup
      SubnetId:
        Ref: PublicSubnet
      UserData:
        Fn::If:
          - RhelFamily
          - Fn::Base64:
              Fn::Join:
                - ''
                - - |
                    #!/bin/bash
                  - Fn::FindInMap:
                      - bootstrap
                      - rhel
                      - warmebs
                  - |2+

                  - Fn::FindInMap:
                      - bootstrap
                      - rhel
                      - yumupdate
                  - |2+

                  - Fn::Join:
                      - ''
                      - - Fn::FindInMap:
                            - bootstrap
                            - rhel
                            - installpackagelist
                        - Ref: PackageList
                        - |2+

          - Fn::If:
              - UbuntuHost
              - Fn::Base64:
                  Fn::Join:
                    - ''
                    - - |
                        #!/bin/bash
                      - Fn::FindInMap:
                          - bootstrap
                          - ubuntu
                          - warmebs
                      - |2+

                      - Fn::Join:
                          - ''
                          - - Fn::FindInMap:
                                - bootstrap
                                - ubuntu
                                - installpackagelist
                            - Ref: PackageList
                            - |2+

              - Ref: AWS::NoValue
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
        - Key: Owner
          Value:
            Ref: Owner
        - Key: Project
          Value:
            Ref: Project
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - EC2Instance
      - EIP
    Properties:
      InstanceId:
        Ref: EC2Instance
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId
#  InboundPublicNetworkAclEntrySshRdp:
#    Type: AWS::EC2::NetworkAclEntry
#    Properties:
#      NetworkAclId:
#        Ref: PublicNetworkAcl
#      RuleNumber:
#        Ref: AllowSshRdpToBastionRuleNumber
#      Protocol: '6'
#      RuleAction: allow
#      Egress: 'false'
#      CidrBlock:
#        Ref: NetworkAccessIP
#      PortRange:
#        From:
#          Fn::If:
#            - LinuxHost
#            - '22'
#            - '3389'
#        To:
#          Fn::If:
#            - LinuxHost
#            - '22'
#            - '3389'
#  InboundPublicNetworkAclEntryIcmp:
#    Type: AWS::EC2::NetworkAclEntry
#    Properties:
#      NetworkAclId:
#        Ref: PublicNetworkAcl
#      RuleNumber:
#        Ref: AllowIcmpToBastionRuleNumber
#      Protocol: '1'
#      RuleAction: allow
#      Egress: 'false'
#      CidrBlock:
#        Ref: NetworkAccessIP
#      Icmp:
#        Code: "-1"
#        Type: "-1"
#      PortRange:
#        From: "-1"
#        To: "-1"
Outputs:
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value:
      Ref: Owner
  Project:
    Description: The project name
    Value:
      Ref: Project
  PublicDns:
    Description: Bastion Public DNS Name
    Value:
      Fn::GetAtt:
        - EC2Instance
        - PublicDnsName
  EIP:
    Description: Bastion External IP Address
    Value:
      Ref: EIP
  OsType:
    Description: OS Type.
    Value:
      Ref: OsType
  InstanceType:
    Description: Instance Type.
    Value:
      Ref: InstanceType
  Ec2KeyPair:
    Description: Key Pair used.
    Value:
      Ref: Ec2KeyPair
  PackageList:
    Description: Package List Installed
    Value:
      Ref: PackageList
  BastionSecurityGroup:
    Description: Bastion Security Group to Allow Remote Access
    Value:
      Ref: BastionSecurityGroup
  IAMRole:
    Description: IAM Instance Profile Role Created.
    Value:
      Ref: IamRole
  VPC:
    Description: VPC Used
    Value:
      Ref: VPC
  PublicSubnet:
    Description: Public Subnet the Bastion Host was Deployed on.
    Value:
      Ref: PublicSubnet
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Ownership
        Parameters:
          - Owner
      - Label:
          default: Instance Settings
        Parameters:
          - Ec2KeyPair
          - OsType
          - InstanceType
          - PackageList
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - PublicSubnet
          - NetworkAccessIP
#          - InternalAccessSecurityGroup
#          - PublicNetworkAcl
#      - Label:
#          default: Network ACL Rule Numbers
#        Parameters:
#          - AllowSshRdpToBastionRuleNumber
#          - AllowIcmpToBastionRuleNumber
    ParameterLabels:
      Owner:
        default: Team or Individual Owner
      PublicSubnet:
        default: Public Subnet
#      PublicNetworkAcl:
#        default: Public Network ACL
#      InternalAccessSecurityGroup:
#        default: Instance Access Security Group
      NetworkAccessIP:
        default: Network IP to Access Bastion Host
      OsType:
        default: OS Type
#      AllowSshRdpToBastionRuleNumber:
#        default: Remote to Public SSH/RDP
#      AllowIcmpToBastionRuleNumber:
#        default: Remote to Public ICMP
      InstanceType:
        default: Instance Type
      PackageList:
        default: Package List
