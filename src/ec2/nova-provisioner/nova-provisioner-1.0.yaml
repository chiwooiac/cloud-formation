---
AWSTemplateFormatVersion: '2010-09-09'
Description: nova-provisioner by Symplesims@gmail.com v20230905
Parameters:
  Owner:
    Description: CloudFormation 스택을 운영할 Owner 의 이메일을 입력합니다.
    Type: String
  Project:
    Description: 프로젝트 코드를 설정합니다.
    Type: String
  VPC:
    Description: VPC 를 선택 합니다.
    Type: AWS::EC2::VPC::Id
  PublicSubnet:
    Description: Public 서브넷 아이디를 정의 합니다.
    Type: AWS::EC2::Subnet::Id
  OsType:
    Description: "OS 타입을 입력합니다."
    Type: String
    Default: amazon
    AllowedValues:
      - amazon
      - ubuntu
  InstanceType:
    Description: "인스턴스 타입을 입력합니다. (예: t3.micro, t3.small, t3.medium, t3.large)"
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
#  InstanceFamily:
#    Description: "Instance Family (ie: t4g, t3a, t3)"
#    Type: String
#    AllowedValues:
#      - t3
#      - t3a
#      - t4g
#  InstanceSize:
#    Description: "인스턴스 크기를 설정합니다. (ie: micro, small, medium, large)"
#    Type: String
#    AllowedValues:
#      - micro
#      - small
#      - medium
#      - large
#  NetworkAccessIP:
#    Description: KeyPair 를 통해 SSH 접속을 하려는 IP를 입력하세요. (예시. 50.32.108.38/32)
#    Type: String
#    MinLength: '9'
#    MaxLength: '18'
#    Default: 0.0.0.0/0
#    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
#  Ec2KeyPair:
#    Description: Select Keypair to Assign to EC2 Instances
#    Type: AWS::EC2::KeyPair::KeyName

---
Mappings:
  AmiRegionMap:
    ap-northeast-2:
      amazon: ami-04a7c24c015ef1e4c # Amazon Linux 2023 AMI 2023.1.20230825.0 x86_64 HVM kernel-6.1
      ubuntu: ami-0c9c942bd7bf113a2 # Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-05-16
    us-west-2:
      amazon: ami-002829755fa238bfa # Amazon Linux 2023 AMI 2023.1.20230825.0 x86_64 HVM kernel-6.1
      ubuntu: ami-03f65b8614a860c29 # Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-05-16
    us-east-1:
      amazon: ami-051f7e7f6c2f40dc1 # Amazon Linux 2023 AMI 2023.1.20230825.0 x86_64 HVM kernel-6.1
      ubuntu: ami-053b0d53c279acc90 # Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-05-16

---
Conditions:
  AmazonHost:
    Fn::Equals:
      - Ref: OsType
      - amazon
  UbuntuHost:
    Fn::Equals:
      - Ref: OsType
      - ubuntu
#  LinuxHost:
#    Fn::Or:
#      - Fn::Equals:
#          - Ref: OsType
#          - amazon
#      - Fn::Equals:
#          - Ref: OsType
#          - ubuntu
#  RhelFamily:
#    Fn::Or:
#      - Fn::Equals:
#          - Ref: OsType
#          - amazon
#      - Fn::Equals:
#          - Ref: OsType
#          - centos
#      - Fn::Equals:
#          - Ref: OsType
#          - rhel
#  WindowsHost:
#    Fn::Equals:
#      - Ref: OsType
#      - windows
---
Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AmazonRoute53FullAccess
        - arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess
        - arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
        - arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
  Path: "/"
  IamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - ''
          - - Ref: Project
            - "-provisioner"
            - "-policy"
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action:
              - cloudhsm:*
              - aws-portal:*
              - billing:*
              - budgets:*
              - ce:*
              - consolidatedbilling:*
              - cur:*
              - invoicing:*
              - payments:*
              - purchase-orders:*
              - tax:*
            Resource: "*"
      Roles:
        - Ref: IamRole
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: IamRole
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Access to Instance
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - Ref: AWS::StackName
                - "-ec2-access"
        - Key: Owner
          Value:
            Ref: Owner
        - Key: Project
          Value:
            Ref: Project
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - EC2SecurityGroup
      - IamInstanceProfile
    Properties:
      InstanceInitiatedShutdownBehavior: stop
      Monitoring: 'true'
      InstanceType:
        Ref: InstanceType
      SubnetId:
        Ref: PublicSubnet
      SecurityGroupIds:
        - Ref: EC2SecurityGroup
      IamInstanceProfile:
        Ref: IamInstanceProfile
      ImageId:
        Fn::If:
          - AmazonHost
          - Fn::FindInMap:
              - AmiRegionMap
              - Ref: AWS::Region
              - amazon
          - Fn::If:
              - UbuntuHost
              - Fn::FindInMap:
                  - AmiRegionMap
                  - Ref: AWS::Region
                  - ubuntu
      UserData:
        - Fn::If:
            - UbuntuHost
            - Fn::Base64: !Sub |
                #!/bin/bash -xe
                /opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource ElasticBootstrap --configsets ElasticInstallationSet --region ${AWS::Region}
                /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ElasticBootstrap --region ${AWS::Region}
        - Fn::If:
            - AmazonHost
            - Fn::Base64: !Sub |
                curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | bash
                tfswitch --latest-stable 1.4.5
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
        - Key: Owner
          Value:
            Ref: Owner
        - Key: Project
          Value:
            Ref: Project
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - EC2Instance
      - EIP
    Properties:
      InstanceId:
        Ref: EC2Instance
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId

---
Outputs:
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value:
      Ref: Owner
  Project:
    Description: The project name
    Value:
      Ref: Project
  PublicDns:
    Description: Bastion Public DNS Name
    Value:
      Fn::GetAtt:
        - EC2Instance
        - PublicDnsName
  EIP:
    Description: Bastion External IP Address
    Value:
      Ref: EIP
  OsType:
    Description: OS Type.
    Value:
      Ref: OsType
  InstanceType:
    Description: Instance Type.
    Value:
      Ref: InstanceType
  EC2SecurityGroup:
    Description: EC2 Security Group to Allow Remote Access
    Value:
      Ref: EC2SecurityGroup
  IAMRole:
    Description: IAM Instance Profile Role Created.
    Value:
      Ref: IamRole
  VPC:
    Description: VPC Used
    Value:
      Ref: VPC
  PublicSubnet:
    Description: Public Subnet the Bastion Host was Deployed on.
    Value:
      Ref: PublicSubnet
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Ownership
        Parameters:
          - Owner
      - Label:
          default: Instance Settings
        Parameters:
          - Ec2KeyPair
          - OsType
          - InstanceType
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - PublicSubnet
    ParameterLabels:
      Owner:
        default: "CloudFormation 스택을 관리하는 owner 이메일 주소를 입력하세요"
      PublicSubnet:
        default: "Public 서브넷 아이디를 입력하세요"
      OsType:
        default: "OS 유형을 입력하세요"
      InstanceType:
        default: "EC2 인스턴스 타입을 입력하세요."
