---
AWSTemplateFormatVersion: '2010-09-09'
Description: nova-provisioner by Symplesims@gmail.com v20230905
Parameters:
  Owner:
    Description: "Enter the email of the Owner who will operate the CloudFormation stack."
    Type: String
  VPC:
    Description: "Enter your VPC ID."
    Type: AWS::EC2::VPC::Id
  PublicSubnet:
    Description: "Enter the Public subnet ID."
    Type: AWS::EC2::Subnet::Id
  OsType:
    Description: "Enter the OS type."
    Type: String
    Default: amazon
    AllowedValues:
      - amazon
      - ubuntu
  InstanceType:
    Description: "Enter the instance type. (eg: t3.micro, t3.small, t3.medium, t3.large)"
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
Mappings:
  AmiRegionMap:
    ap-northeast-2:
      amazon: ami-04a7c24c015ef1e4c # Amazon Linux 2023 AMI 2023.1.20230825.0 x86_64 HVM kernel-6.1
      ubuntu: ami-0c9c942bd7bf113a2 # Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-05-16
    us-west-2:
      amazon: ami-002829755fa238bfa # Amazon Linux 2023 AMI 2023.1.20230825.0 x86_64 HVM kernel-6.1
      ubuntu: ami-03f65b8614a860c29 # Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-05-16
    us-east-1:
      amazon: ami-051f7e7f6c2f40dc1 # Amazon Linux 2023 AMI 2023.1.20230825.0 x86_64 HVM kernel-6.1
      ubuntu: ami-053b0d53c279acc90 # Ubuntu, 22.04 LTS, amd64 jammy image build on 2023-05-16
Conditions:
  AmazonHost:
    Fn::Equals:
      - Ref: OsType
      - amazon
  UbuntuHost:
    Fn::Equals:
      - Ref: OsType
      - ubuntu
Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      RoleName:
        Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-provisioner-role"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AmazonRoute53FullAccess
        - arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
  IamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-provisioner-policy"
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action:
              - cloudhsm:*
              - aws-portal:*
              - billing:*
              - budgets:*
              - ce:*
              - consolidatedbilling:*
              - cur:*
              - invoicing:*
              - payments:*
              - purchase-orders:*
              - tax:*
            Resource: "*"
      Roles:
        - Ref: IamRole
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: IamRole
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Access to Instance
      GroupName:
        Fn::Join:
          - ''
          - - Ref: AWS::StackName
            - "-provisioner-sg"
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - Ref: AWS::StackName
                - "-ec2-access"
        - Key: Owner
          Value:
            Ref: Owner
        - Key: Name
          Value:
            Ref: AWS::StackName
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - EC2SecurityGroup
      - IamInstanceProfile
    Properties:
      InstanceInitiatedShutdownBehavior: stop
      Monitoring: 'true'
      InstanceType:
        Ref: InstanceType
      SubnetId:
        Ref: PublicSubnet
      SecurityGroupIds:
        - Ref: EC2SecurityGroup
      IamInstanceProfile:
        Ref: IamInstanceProfile

      ImageId:
        Fn::If:
          - AmazonHost
          - Fn::FindInMap:
              - AmiRegionMap
              - Ref: AWS::Region
              - amazon
          - Fn::FindInMap:
              - AmiRegionMap
              - Ref: AWS::Region
              - ubuntu

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo yum install -y git jq

      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
        - Key: Owner
          Value:
            Ref: Owner

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
      - EC2Instance
      - EIP
    Properties:
      InstanceId:
        Ref: EC2Instance
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId

Outputs:
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value:
      Ref: Owner
  EIP:
    Description: Bastion External IP Address
    Value:
      Ref: EIP
  OsType:
    Description: OS Type.
    Value:
      Ref: OsType
  InstanceType:
    Description: Instance Type.
    Value:
      Ref: InstanceType
  EC2SecurityGroup:
    Description: EC2 Security Group to Allow Remote Access
    Value:
      Ref: EC2SecurityGroup
  IAMRole:
    Description: IAM Instance Profile Role Created.
    Value:
      Ref: IamRole
  VPC:
    Description: VPC Used
    Value:
      Ref: VPC
  PublicSubnet:
    Description: Public Subnet the Bastion Host was Deployed on.
    Value:
      Ref: PublicSubnet
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Ownership
        Parameters:
          - Owner
      - Label:
          default: Instance Settings
        Parameters:
          - OsType
          - InstanceType
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - PublicSubnet
    ParameterLabels:
      Owner:
        default: "Enter the owner email address that manages the CloudFormation stack"
      PublicSubnet:
        default: "Enter the public subnet ID"
      OsType:
        default: "Please enter your OS type"
      InstanceType:
        default: "Enter the EC2 instance type."
